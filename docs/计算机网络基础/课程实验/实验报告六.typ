#import "./info.typ": *

#align(center)[
  #text(20pt)[= 实验报告（六）]
]

#set text(
  weight: "regular",
  font: ("Times New Roman", "LXGW WenKai"),
  size: 11pt,
)

实验名称：实验六 站点的架构技术 \
姓名：#name 学号：#studentID 实验班号：#classID 机器号：#tableID

#text(16pt)[== 一、实验目的]

+ 了解 windows 2008 server 下的 IIS7。
+ 掌握 WEB 站点和 FTP 站点的架构技术。
+ 区分虚拟主机和虚拟目录的概念及实现方法。

#text(16pt)[== 二、实验过程]

#text(14pt)[=== i. 实验任务 一]

+ 任务内容：实验环境的配置
  - 设置网络地址及域名解析
  - 编辑设计简单的网页
  - 检查 Windows Server 下的 IIS 组件是否安装与 IIS 组件的安装
+ 实验过程：
  + 设置本实验使用非板载网卡，配置 IP 地址为 `192.168.20.218`，子网掩码为 `255.255.255.0`，默认网关不设。配置好后，运行 `ipconfig /all` 查看网络配置是否生效。进一步，将 DNS 服务器设置为本组 DNS 服务器地址（在本次实验中使用本机作为 DNS 服务器主机），设置首选 DNS 服务器为 `192.168.20.218`，设置好后在运行 `ipconfig /all`，配置无误后再运行 `ipconfig /flushdns` 清除 DNS 缓存。
  + 将编辑好的网页放到电脑 *非系统盘* 上（注意入口文件 `index.html` 文件的位置）。
  + 在 “开始” - “程序/控制面板” - “管理工具” 找到 “IIS-Internet 信息服务（IIS 管理器）” 进入 IIS 控制界面。
    如果未找到上述程序入口，可按如下步骤安装 IIS，可能视情况需要重启电脑， “开始” - “管理工具” - “服务器管理器” - “角色” - “添加角色” - “服务器角色” - “WEB 服务器（IIS）” - “安装”（安装过程中需要注意勾选 “FTP 服务”，否则无法进行后续的实验）。
+ 结果与分析：
  - 运行 `ipconfig /all`，网络配置与预期相符，说明网络配置生效。
  - 正常运行并启动 IIS 控制台，说明 IIS 安装成功，环境配置正常。

#text(14pt)[=== ii. 实验任务 二]

+ 任务内容：WWW 服务的实现
+ 实验过程：
  + 新建 Web 站点。（此时如在 IIS 控制台下已有 Web 站点或 FTP 站点，为避免混淆，最好先停用已有站点。如果此时只有 WWW 服务，说明没有安装 “FTP 服务”，此时应先返回配置好 IIS 再进行实验）
    具体步骤如下：
    + 在 “添加网站” 窗口输入网站名称，本次实验设置为 "www"，设置虚拟主机，即对应主页的“物理路径”（包含入口文件，如 index.html 所在的文件目录）。
    + 设置 IP 名称、端口号和域名。本次实验设置为 192.168.20.218，端口号为 8080，域名为 www.218.com。
    + 设置 DNS 解析，将域名解析到对应的 IP 地址上。
  + 网站配置：在本次实验中，无需额外设置其他 WWW 服务设置，仅需按照默认设置即可。设置好后，即可通过域名或者 *IP + 端口号* 的方式进行访问。
  + 重复上述新建网站和配置网站的过程，确认设置的正确性。
+ 结果与分析：
  + 在本次实验中，首先通过 IP 地址 + 端口号的方式进行访问，本次实验为 `http://192.168.20.218:8080/`，可以正常访问，说明配置正确。然后通过域名的方式进行访问，可以正常访问，说明 DNS 解析正确。
+ 思考题：
  + 如何通过 IP 方式进行访问？
    - 如果设置的为局域网 IP 或本机的 IP 地址，可以使用 IP 直接进行访问时，如果端口号不是 80，还需要在 IP 后面加上端口号，例如本次实验中可通过 `http://192.168.20.218:8080` 进行访问。
    - 如果设置的为公网 IP，访问时必须先设置好 DNS 解析和 IP 地址的反向解析，将 IP 解析到对应的域名上，然后进行访问。

#text(14pt)[=== iii. 实验任务 三]

+ 实验内容：FTP 服务的实现
+ 实验过程：
  + 新建 FTP 站点，确认相应的 IP 地址及资源目录
  + 配置 FTP 站点设置。
    - 由于实验用机无设置密码，因而在设置时需要启用匿名访问，同时设置匿名访问的权限（对所有用户均可访问）。
    - 同时，由于实验用机处于局域网内，自签 SSL 证书较为复杂，因而设置时应选择不启用 SSL 证书。
    - 其余配置依照默认即可。在本次实验中，设置的 IP 地址为 192.168.20.218，端口号为 8081，域名为 www.218.com。
  - 运行与访问，发布好页面后，可以匿名进行访问，也可为 FTP 站点新建用户，以用户身份访问。在 FTP 页面上，可以访问并下载虚拟目录下的资源。
+ 结果与分析：
  + 首先通过 IP 地址 + 端口号的方式进行访问，本次实验为 `ftp://192.168.20.218:8081/`，可以正常访问，说明配置正确。然后通过域名的方式进行访问，可以正常访问，说明 DNS 解析正确。
+ 思考题：
  + 结合 DNS 服务的设置，总结构建 Web/FTP 站点的操作流程以及各项属性参数（IP 地址，端口号等）的作用，简述这些参数对 Web/FTP 站点访问方式的影响。
    - IP 地址：虚拟主机对应的 IP 地址。
    - 端口号：可以通过指定不同的端口号来实现多个 Web/FTP 站点的并行服务。
    - 域名：通过将域名绑定到 IP 上，可以通过域名访问网站或FTP站点，提供更友好的访问方式。
  + 总结在同一台计算机上实现多个 Web/FTP 站点的方法。
    - IIS 服务（Windows server 提供的可视化操作），最容易上手，不过性能方面就不要想了x
    - Apache 正向代理服务
    - Nginx 反向代理服务
    - 其他（诸如 node 的 npx ，vue 的 vite 等静态网页发布工具等）
  + 尝试分析新建站点同新建虚拟目录的区别，体会虚拟目录的作用。
    - 新建站点是在服务器上创建一个全新的网站，它可以有自己的域名、IP地址和端口号。而新建虚拟目录是将一个目录设置为网站的子目录，它并不需要独立的域名和端口号，而是通过主站点的URL进行访问。
    - 本质上讲，新建站点实际上是新建主机，而新建虚拟目录实际上是新建一个虚拟的子目录，用于给虚拟机提供资源访问，在实际实践中，常常用主根目录作为虚拟目录的根目录，这样，虚拟目录就可以访问主根目录下的所有资源了，而进一步，可以将多个物理路径不关联的目录绑定到同一虚拟主机上进行访问。

#text(14pt)[=== iv. 实验任务 四]

+ 实验内容：Apache 服务器的安装与配置（选做）
+ 实验过程：
  + 安装 Apache 服务器，安装过程中需要注意勾选 “Apache 服务”，安装好后，点击运行。
  + 配置 Apache 服务器，主要是修改配置文件 `httpd.conf`，修改配置文件后，重启 Apache 服务器，以下是必须的配置项。
    - Port 运行端口，默认为 80，本次实验更改为 8080。
    - ServerName 服务器名称，本次实验更改为 `www.218.com`。
    - DocumentRoot 根目录，即入口文件所在目录，本次实验更改为 `D:/vuepress-blog`。
    - DirectoryIndex 入口文件，本次实验使用默认入口文件 `index.html`。
  + 配置 DNS 解析，将域名解析到对应的 IP 地址上。配置好后，即可通过域名或者 *IP + 端口号* 的方式进行访问。
+ 结果与分析：
  + 注意事项：
    - 每次修改配置后，需要重启 Apache 才能使之生效。
    - 入口文件必须位于根目录下，运行时会在根目录下查找入口文件。

#text(16pt)[== 三、实验小结]

- 小结：静态网页服务的发布和实现
  - IIS 服务（Windows server 提供的可视化操作），最容易上手，不过性能方面就不要想了x
  - Apache 正向代理服务
  - Nginx 反向代理服务
  - 其他（诸如 node 的 npx ，vue 的 vite 等静态网页发布工具等）
- Apache、Nginx 与代理服务器
  - Apache 与 Nginx 都是常见的代理服务器软件，都是开源的，都可以在 Windows、Linux 等系统上运行。二者不同的是，前置是正向代理，后者是反向代理。
  - 在配置上，二者其实是很相似的，本质上讲，所有代理服务器所需的配置都可以概括为如下：
    - 根目录：对应入口文件所在目录，也即虚拟目录
    - 端口号：对应服务器的端口号
    - 域名：对应服务器的域名
    - 访问控制与文件权限：对应服务器的访问控制与文件权限控制
    - 代理规则，主要是一些正则表达式，用于匹配请求的 URL，然后将其转发到对应的服务器上
    - ......
- SSL 证书
  - SSL 证书是用于加密传输的证书，一般来说，如果是自己搭建的服务器，可以使用免费的证书，如果是商业服务器，需要购买证书。
  - 证书的作用是，将服务器的公钥与域名绑定，这样，当客户端访问服务器时，服务器会将证书发送给客户端，客户端会验证证书的有效性，如果有效，则会使用证书中的公钥对数据进行加密，然后发送给服务器，服务器使用私钥对数据进行解密，然后进行处理。
  - 证书的有效性验证，主要是验证证书的签发机构是否可信，以及证书是否过期等。
  - 证书的生成，可以使用 OpenSSL 等工具进行生成，也可以使用一些免费的证书生成网站进行生成。
- 本次实验内容并不复杂，主要在于理解虚拟主机和虚拟目录，并理解服务器的配置与网站和资源的发布。
