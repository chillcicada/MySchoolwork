import{_ as i,b as a,a9 as t,o as n}from"./chunks/framework.BjzsCNOl.js";const E=JSON.parse('{"title":"流程控制与逻辑运算","description":"","frontmatter":{},"headers":[],"relativePath":"面向科学计算的Fortran程序设计/第六讲-流程控制与逻辑运算.md","filePath":"面向科学计算的Fortran程序设计/第六讲-流程控制与逻辑运算.md","lastUpdated":1738393782000}'),l={name:"面向科学计算的Fortran程序设计/第六讲-流程控制与逻辑运算.md"};function h(e,s,k,p,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="流程控制与逻辑运算" tabindex="-1">流程控制与逻辑运算 <a class="header-anchor" href="#流程控制与逻辑运算" aria-label="Permalink to &quot;流程控制与逻辑运算&quot;">​</a></h1><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="#流程控制与逻辑运算">流程控制与逻辑运算</a><ul><li><a href="#目录">目录</a></li><li><a href="#if-语句">IF 语句</a></li><li><a href="#逻辑运算">逻辑运算</a><ul><li><a href="#浮点数的逻辑运算">浮点数的逻辑运算</a></li></ul></li><li><a href="#集合运算">集合运算</a></li><li><a href="#多重逻辑判断if---else-if">多重逻辑判断：IF - ELSE IF</a></li><li><a href="#嵌套-if-语句">嵌套 IF 语句</a></li><li><a href="#select-case-语句">SELECT CASE 语句</a></li><li><a href="#goto-语句与其他语句">GOTO 语句与其他语句</a></li></ul></li></ul><h2 id="if-语句" tabindex="-1">IF 语句 <a class="header-anchor" href="#if-语句" aria-label="Permalink to &quot;IF 语句&quot;">​</a></h2><blockquote><p>编写程序时，应尽量避免分支语句的使用和嵌套</p></blockquote><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(logical expression) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end if</span></span></code></pre></div><p>IF 语句简略语法（单行），同 C 语言</p><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (logical expression) statement</span></span></code></pre></div><blockquote><p>逻辑运算的优先级高于集合运算的优先级</p></blockquote><h2 id="逻辑运算" tabindex="-1">逻辑运算 <a class="header-anchor" href="#逻辑运算" aria-label="Permalink to &quot;逻辑运算&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">逻辑运算</th><th style="text-align:center;">Fortran 字符缩写</th><th style="text-align:center;">Fortran 运算符</th><th style="text-align:right;">C/C++</th></tr></thead><tbody><tr><td style="text-align:center;">相等</td><td style="text-align:center;">.EQ.</td><td style="text-align:center;">==</td><td style="text-align:right;">==</td></tr><tr><td style="text-align:center;">不等</td><td style="text-align:center;">.NE.</td><td style="text-align:center;">/=</td><td style="text-align:right;">!=</td></tr><tr><td style="text-align:center;">大于</td><td style="text-align:center;">.GT.</td><td style="text-align:center;">&gt;</td><td style="text-align:right;">&gt;</td></tr><tr><td style="text-align:center;">小于</td><td style="text-align:center;">.LT.</td><td style="text-align:center;">&lt;</td><td style="text-align:right;">&lt;</td></tr><tr><td style="text-align:center;">大于等于</td><td style="text-align:center;">.GE.</td><td style="text-align:center;">&gt;=</td><td style="text-align:right;">&gt;=</td></tr><tr><td style="text-align:center;">小于等于</td><td style="text-align:center;">.LE.</td><td style="text-align:center;">&lt;=</td><td style="text-align:right;">&lt;=</td></tr></tbody></table><blockquote><p>Fortran 语法没有严格规定是否短路，实际上，Fortran 语言处理短路问题由编译器决定，因而，需要尽量避免写出短路语法</p></blockquote><h3 id="浮点数的逻辑运算" tabindex="-1">浮点数的逻辑运算 <a class="header-anchor" href="#浮点数的逻辑运算" aria-label="Permalink to &quot;浮点数的逻辑运算&quot;">​</a></h3><ul><li>计算浮点数逻辑运算时，很少使用 <code>==</code> 来比较大小</li><li>比较大小时，最好使用相对误差控制，而不是绝对误差控制</li></ul><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">! if-real.f90</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">program</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  implicit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> none</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a, b, c, d</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.1415927</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.1415926</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c / (a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    print</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;d == a - b&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  else</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    print</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;d != a - b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end if</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  stop</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end program</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span></code></pre></div><p>以下为编译输出过程</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gfortran</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if-real.f90</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Linux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./a.out</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Windows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.exe</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   6.51454002E-08</span></span></code></pre></div><h2 id="集合运算" tabindex="-1">集合运算 <a class="header-anchor" href="#集合运算" aria-label="Permalink to &quot;集合运算&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">集合运算</th><th style="text-align:center;">Fortran 字符缩写</th><th style="text-align:right;">C/C++</th></tr></thead><tbody><tr><td style="text-align:center;">与</td><td style="text-align:center;">.AND.</td><td style="text-align:right;">&amp;&amp;</td></tr><tr><td style="text-align:center;">或</td><td style="text-align:center;">.OR.</td><td style="text-align:right;">||</td></tr><tr><td style="text-align:center;">非</td><td style="text-align:center;">.NOT.</td><td style="text-align:right;">!</td></tr><tr><td style="text-align:center;">结果相同，同或</td><td style="text-align:center;">.EQV.</td><td style="text-align:right;">^</td></tr><tr><td style="text-align:center;">结果不同，异或</td><td style="text-align:center;">.NEQV.</td><td style="text-align:right;">!^</td></tr></tbody></table><p>集合运算的优先级规则：<code>.not.</code> &gt; <code>.and.</code> &gt; <code>.or.</code> &gt; <code>.NEQV</code> = <code>.EQV.</code></p><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">! if.f90</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">program</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  implicit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> none</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .and.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .or.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    print</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end if</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .or.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .and.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    print</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end if</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  stop</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end program</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span></code></pre></div><p>以下为编译输出过程</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gfortran</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if.f90</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Linux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./a.out</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Windows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.exe</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2</span></span></code></pre></div><p>// TODO</p><h2 id="多重逻辑判断-if-else-if" tabindex="-1">多重逻辑判断：IF - ELSE IF <a class="header-anchor" href="#多重逻辑判断-if-else-if" aria-label="Permalink to &quot;多重逻辑判断：IF - ELSE IF&quot;">​</a></h2><blockquote><p>编写程序时，应尽量避免分支语句的使用和嵌套。选用多重逻辑判断时，应尽量把执行概率高的分支放到前面</p></blockquote><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (logical expression) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (logical expression) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (logical expression) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  ! when all the logical expression is false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end if</span></span></code></pre></div><h2 id="嵌套-if-语句" tabindex="-1">嵌套 IF 语句 <a class="header-anchor" href="#嵌套-if-语句" aria-label="Permalink to &quot;嵌套 IF 语句&quot;">​</a></h2><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (logical expression) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (logical expression) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end if</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end if</span></span></code></pre></div><h2 id="select-case-语句" tabindex="-1">SELECT CASE 语句 <a class="header-anchor" href="#select-case-语句" aria-label="Permalink to &quot;SELECT CASE 语句&quot;">​</a></h2><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value2)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ! when there is no option matching the value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end select</span></span></code></pre></div><p>当变量是整数时，指定数值时可以使用冒号来指定范围，数值必须是常数而非变量</p><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ! when there is no option matching the value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    statement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end select</span></span></code></pre></div><h2 id="goto-语句与其他语句" tabindex="-1">GOTO 语句与其他语句 <a class="header-anchor" href="#goto-语句与其他语句" aria-label="Permalink to &quot;GOTO 语句与其他语句&quot;">​</a></h2><ul><li><code>goto</code> 语句：用于无条件跳转到指定的标签处，标签是一个整数，可以是任意整数，但不能是变量</li><li><code>pause</code> 语句：用于暂停程序的运行，等待用户按回车键继续运行</li><li><code>continue</code> 语句：用于跳过当前循环的剩余部分，继续执行下一次循环</li><li><code>stop</code> 语句：用于终止程序的运行，可在 stop 时输出信息，可用于断点调试</li></ul><blockquote><p>stop 语句最为常用，其次是 continue 语句，pause 语句很少使用，goto 语句几乎不用</p></blockquote><p>其中，stop 语句可以接受一个数字或者字符串参数(常数)，用于输出信息，便于调试，不过在低版本编译器上可能会导致错误。</p><div class="language-Fortran vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">program</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  implicit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> none</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      stop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      ! or stop &#39;error&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end if</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end program</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span></code></pre></div>`,38)]))}const y=i(l,[["render",h]]);export{E as __pageData,y as default};
