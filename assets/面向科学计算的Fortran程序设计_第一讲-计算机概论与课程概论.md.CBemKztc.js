import{_ as i,b as a,a9 as r,o as e}from"./chunks/framework.BjzsCNOl.js";const f=JSON.parse('{"title":"*计算机概论与课程绪论","description":"","frontmatter":{},"headers":[],"relativePath":"面向科学计算的Fortran程序设计/第一讲-计算机概论与课程概论.md","filePath":"面向科学计算的Fortran程序设计/第一讲-计算机概论与课程概论.md","lastUpdated":1738393782000}'),t={name:"面向科学计算的Fortran程序设计/第一讲-计算机概论与课程概论.md"};function o(u,l,n,h,s,d){return e(),a("div",null,l[0]||(l[0]=[r('<h1 id="计算机概论与课程绪论" tabindex="-1">*计算机概论与课程绪论 <a class="header-anchor" href="#计算机概论与课程绪论" aria-label="Permalink to &quot;\\*计算机概论与课程绪论&quot;">​</a></h1><blockquote><p>第一节课为绪论课，所有内容考试都不做要求</p></blockquote><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="#计算机概论与课程绪论">*计算机概论与课程绪论</a><ul><li><a href="#目录">目录</a></li><li><a href="#计算机简史">*计算机简史</a></li><li><a href="#计算机基本结构">*计算机基本结构</a></li><li><a href="#处理器操作系统与编译器简介">*处理器、操作系统与编译器简介</a></li><li><a href="#计算机编程语言">*计算机编程语言</a><ul><li><a href="#fortran-编程语言">*Fortran 编程语言</a></li></ul></li><li><a href="#课程教学目的教学安排与考试方式">*课程教学目的、教学安排与考试方式</a><ul><li><a href="#为什么开设本课程">*为什么开设本课程</a></li><li><a href="#教学目标">*教学目标</a></li><li><a href="#参考书目">*参考书目</a></li><li><a href="#授课内容">*授课内容</a></li><li><a href="#考核方式">*考核方式</a></li></ul></li></ul></li></ul><h2 id="计算机简史" tabindex="-1">*计算机简史 <a class="header-anchor" href="#计算机简史" aria-label="Permalink to &quot;\\*计算机简史&quot;">​</a></h2><p>第一台<strong>电子</strong>计算机：ENIAC</p><ul><li>在 1946 年诞生于美国宾夕法尼亚大学</li><li>物理学家<strong>约翰·莫克利</strong>和工程师<strong>普雷斯伯·埃克特</strong>领导研制</li><li>占地 170 平方米，重达 30 吨，耗电功率约 150 千瓦</li><li>每秒可进行 5000 次运算</li></ul><p>第二代计算机（50 年代中后期到 60 年代中期）</p><p>第三代计算机（60 年代中期到 70 年代中期）</p><ul><li>逻辑元件与内存均由集成电路实现</li><li>硬件上，开始应用微程序、高速缓存（Cache）、虚拟存储器、流水线等先进技术</li><li>出现操作系统，其具有资源调度、人/机交换控制等功能</li><li>大型机/巨型机与小型机同时发展</li></ul><p>第四代计算机（70 年代中期开始）</p><ul><li>以大规模超大规模集成电路及微处理器为典型特征</li><li>并行处理技术</li><li>计算机网络的发展与广泛应用</li><li>超标量技术 <ul><li>一个时钟周期执行多条指令</li></ul></li><li>向量化技术 <ul><li>一条指令运算多组数据</li></ul></li><li>嵌入式系统</li></ul><h2 id="计算机基本结构" tabindex="-1">*计算机基本结构 <a class="header-anchor" href="#计算机基本结构" aria-label="Permalink to &quot;\\*计算机基本结构&quot;">​</a></h2><ul><li>服务器</li><li>超级计算机</li></ul><h2 id="处理器、操作系统与编译器简介" tabindex="-1">*处理器、操作系统与编译器简介 <a class="header-anchor" href="#处理器、操作系统与编译器简介" aria-label="Permalink to &quot;\\*处理器、操作系统与编译器简介&quot;">​</a></h2><ul><li>处理器</li><li>操作系统 <br> 一组主管并控制计算机硬件与软件资源、提供公共服务并组织人机交互的系统软件程序。根据运行的环境，可分为桌面操作系统、手机操作系统、服务器操作系统、嵌入式操作系统等 <ul><li>进程管理与线程管理：处理器的调度、分配和回收等</li><li>存储管理：存储分配、存储共享、存储保护、存储扩张</li><li>设备管理：设备分配、设备使用、设备传输控制等</li><li>文件管理：文件存储空间的管理、目录管理、文件操作系统管理、文件保护</li></ul></li><li>进程与线程 <ul><li>进程（Process）是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配（包括存储分配）和调度的基本单位，是操作系统结构的基础</li><li>线程（Thread）是操作系统能够进行运算调度的最小单位，被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务</li></ul></li></ul><h2 id="计算机编程语言" tabindex="-1">*计算机编程语言 <a class="header-anchor" href="#计算机编程语言" aria-label="Permalink to &quot;\\*计算机编程语言&quot;">​</a></h2><ul><li>二进制与汇编</li><li>高级编程语言与编译</li><li>编译器 <ul><li>将一种编程语言（通常为高级语言）翻译为另一种低级语言（通常为低级语言）的程序</li><li>主要工作流程：源代码（source code）-&gt; 预处理器（preprocessor）-&gt; 编译器（compiler）-&gt; 汇编程序（assembler） -&gt; 目标代码（object code）-&gt; 链接器（Linker）-&gt; 可执行程序（executables）</li><li>包括词法分析、语法分析、语义分析、中间代码生成、中间代码优化、后端代码优化、代码生成等步骤</li><li>有众多编译选项供选择使用</li><li>GNU、LLVM、Open62 等开源编译器；Intel 等商用编译器</li></ul></li><li>编译器</li><li>高级编程语言</li></ul><h3 id="fortran-编程语言" tabindex="-1">*Fortran 编程语言 <a class="header-anchor" href="#fortran-编程语言" aria-label="Permalink to &quot;\\*Fortran 编程语言&quot;">​</a></h3><ul><li>世界上第一个被正式推广使用的高级编程语言</li><li>为科学工程计算和企事业单位管理中能用数学公式表达的问题而设计的，其数值计算功能较强</li><li>自 1954 年被提出以来，仍历久不衰，在物理、化学、地学、航空航天等学科学科的数值计算中始终是主要编程语言</li><li>对科学计算领域的人员而言，Fortran 程序设计是需要熟练掌握的一项必备技能</li></ul><h2 id="课程教学目的、教学安排与考试方式" tabindex="-1">*课程教学目的、教学安排与考试方式 <a class="header-anchor" href="#课程教学目的、教学安排与考试方式" aria-label="Permalink to &quot;\\*课程教学目的、教学安排与考试方式&quot;">​</a></h2><h3 id="为什么开设本课程" tabindex="-1">*为什么开设本课程 <a class="header-anchor" href="#为什么开设本课程" aria-label="Permalink to &quot;\\*为什么开设本课程&quot;">​</a></h3><ul><li>Fortran 是科学计算仍在广泛使用的编程语言</li><li>国际上有大量 Fortran 并行科学计算软件，为各学科的发展提供了有力的基础支撑</li><li>清华大学之前没有 Fortran 程序设计课程，而物理、化学/化工、热能、建筑、水利、航空航天、环境、地学等学科有基于 Fortran 研制自主科学计算软件的需求</li><li>本课程将有利于清华培养能为基础科学计算软件的高水平自立自强做出贡献的人才</li></ul><h3 id="教学目标" tabindex="-1">*教学目标 <a class="header-anchor" href="#教学目标" aria-label="Permalink to &quot;\\*教学目标&quot;">​</a></h3><ul><li>让学生了解计算机的相关背景和 Fortran 编程语言的重要性</li><li>让学生掌握 Fortran 编程的系统性知识，具备科学计算的熟练编程和调试能力</li><li>让学生了解并行编程的知识，具备 Fortran 的并行编程能力</li></ul><h3 id="参考书目" tabindex="-1">*参考书目 <a class="header-anchor" href="#参考书目" aria-label="Permalink to &quot;\\*参考书目&quot;">​</a></h3><p>《Fortran 95 程序设计》，中国电力出版，彭国伦编著</p><h3 id="授课内容" tabindex="-1">*授课内容 <a class="header-anchor" href="#授课内容" aria-label="Permalink to &quot;\\*授课内容&quot;">​</a></h3><ul><li>开发环境与工具 <ul><li>Linux 操作系统</li><li>编译器简介</li><li>编辑器 vi</li><li>Linux 下编译器的使用</li></ul></li><li>科学计算中的 Fortran 软件 <ul><li>航天航空领域</li><li>计算物理领域</li><li>计算化学领域</li><li>计算地球领域</li></ul></li><li>Fortran 程序设计基础 <ul><li>字符集</li><li>书面格式</li><li>数据类型声明与混合运算</li><li>数字表达式</li></ul></li><li>输入输出及声明 <ul><li>输出命令</li><li>输入命令</li><li>格式化输入输出</li><li>自定义数据类型</li><li>KIND 使用</li></ul></li><li>流程控制与逻辑运算 <ul><li>IF 语句与逻辑运算</li><li>浮点数与字符集的逻辑运算</li><li>SELECT CASE 语句</li><li>其他流程控制语句</li><li>二进制的逻辑运算</li></ul></li><li>循环 <ul><li>DO 循环</li><li>DO WHILE 循环</li><li>循环的流程控制</li><li>循环的应用</li></ul></li><li>数组 <ul><li>基本使用</li><li>动态数组分配</li><li>数组的存储规则（内存机制）</li><li>数组的内容设置</li><li>数组的应用举例</li></ul></li><li>函数 <ul><li>子程序（SUBROUTINE）的使用</li><li>函数（FUNCTION）的使用</li><li>函数中的局部变量</li><li>全局变量（COMMON）</li><li>函数参数声明与传递</li><li>接口函数</li><li>特殊函数类型</li><li>MODULE</li><li>宏定义</li></ul></li><li>文件 <ul><li>文件的概念</li><li>文件的操作</li><li>顺序文件的操作</li><li>直接访问文件的操作</li><li>二进制文件的操作</li><li>以文件方式访问字符串</li><li>NAMELIST</li><li>应用举例</li></ul></li><li>编译器的高级使用 <ul><li>编译器的完成功能</li><li>编译过程</li><li>基于编译器的程序调试</li><li>编译优化与选项</li><li>与其他语言链接</li></ul></li><li>数值方法应用 <ul><li>求解非线性函数</li><li>线性代数</li><li>积分</li><li>插值算法与曲线近似</li><li>数值计算库 IMSL</li></ul></li><li>Fortran 并行程序设计 <ul><li>并行程序简介</li><li>消息编程接口 MPI 入门</li><li>MPI 并行程序编译与运行</li><li>MPI 组通信</li><li>MPI 求解泊松方程</li><li>MPI 非连续数据发送</li><li>MPI 并行的两种基本设计模式</li><li>共享内存并行体系架构</li><li>OpenMP 并行编程</li><li>MPI + OpenMP 混合程序的并行运行提交</li></ul></li><li>科学计算库 <ul><li>偏微分方程求解</li><li>高性能数值计算库 PetSC 入门</li></ul></li></ul><h3 id="考核方式" tabindex="-1">*考核方式 <a class="header-anchor" href="#考核方式" aria-label="Permalink to &quot;\\*考核方式&quot;">​</a></h3><ul><li>考勤 10%</li><li>课堂表现 10%</li><li>平时作业 40%</li><li>期末考试 40%</li></ul>',31)]))}const b=i(t,[["render",o]]);export{f as __pageData,b as default};
